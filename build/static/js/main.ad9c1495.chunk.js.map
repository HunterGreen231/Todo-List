{"version":3,"sources":["todo-item.js","index.js"],"names":["TodoItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDone","fetch","concat","item","id","method","headers","Content-Type","body","JSON","stringify","title","done","state","then","setState","catch","error","console","log","_this2","react_default","a","createElement","className","type","onClick","defaultChecked","deleteItem","React","Component","App","onChange","event","todo","target","value","renderTodos","todos","map","todo_item","key","addTodo","preventDefault","axios","url","content-type","data","toConsumableArray","filter","response","json","onSubmit","placeholder","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.ad9c1495.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      done: props.item.done\n    };\n  }\n\n  toggleDone = () => {\n    fetch(`https://hg-todo-list-api.herokuapp.com/todo/${this.props.item.id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        title: this.props.item.title,\n        done: !this.state.done\n      })\n    })\n      .then(\n        this.setState({\n          done: !this.state.done\n        })\n      )\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    console.log(this.props.title);\n    return (\n      <div className=\"todo-item\">\n        <input\n          type=\"checkbox\"\n          onClick={this.toggleDone}\n          defaultChecked={this.state.done}\n        />\n        <p className={this.state.done ? \"done\" : null}>\n          {this.props.item.title}\n        </p>\n        <div className=\"delete-buttons-wrapper\">\n          <button\n            onClick={() => this.props.deleteItem(this.props.item.id)}\n            className=\"delete-button\"\n          >\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nimport TodoItem from \"./todo-item\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      todo: \"\",\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://hg-todo-list-api.herokuapp.com/todos\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          todos: data\n        });\n      });\n  }\n\n  onChange = event => {\n    this.setState({\n      todo: event.target.value\n    });\n  };\n\n  renderTodos = () => {\n    return this.state.todos.map(item => {\n      return (\n        <TodoItem key={item.id} item={item} deleteItem={this.deleteItem} />\n      );\n    });\n  };\n\n  addTodo = event => {\n    event.preventDefault();\n    axios({\n      method: \"post\",\n      url: \"https://hg-todo-list-api.herokuapp.com/add-todo\",\n      headers: { \"content-type\": \"application/json\" },\n      data: {\n        title: this.state.todo,\n        done: false\n      }\n    })\n      .then(data => {\n        this.setState({\n          todos: [...this.state.todos, data.data],\n          todo: \"\"\n        });\n      })\n      .catch(error => {\n        console.log(\"An error happened: \", error);\n      });\n  };\n\n  deleteItem = id => {\n    fetch(`https://hg-todo-list-api.herokuapp.com/todo/${id}`, {\n      method: \"DELETE\"\n    })\n      .then(\n        this.setState({\n          todos: this.state.todos.filter(item => {\n            return item.id !== id;\n          })\n        })\n      )\n      .catch(error => {\n        console.log(\"An error occured: \", error);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>ToDo List</h1>\n        <form className=\"add-todo\" onSubmit={this.addTodo}>\n          <input\n            type=\"text\"\n            placeholder=\"Add Todo\"\n            onChange={this.onChange}\n            value={this.state.todo}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {this.renderTodos()}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}